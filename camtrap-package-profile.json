{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Camera Trap Data Package Profile",
  "description": "This is the profile of standardized camera trap data package.",
  "type": "object",
  "definitions": {
    "organization": {
      "description": "Basic information about an organization related to this data package.",
      "type": "object",
      "required": [
        "title",
        "url"
      ],
      "properties": {
        "title": {
          "description": "Organization name.",
          "type": "string",
          "format": "default"
        },
        "url": {
          "description": "A web address for this organization.",
          "type": "string",
          "format": "uri"
        },
        "email": {
          "description": "Organization contact email.",
          "type": "string",
          "format": "email"
        }
      }
    },
    "species": {
      "description": "",
      "type": "object",
      "required": [
        "taxon_id",
        "scientific_name"
      ],
      "properties": {
        "taxon_id": {
          "description": "Taxon ID according to a taxonomy reference list defined by `taxon_id_reference`.",
          "type": "string",
          "format": "default"
        },
        "scientific_name": {
          "description": "Species scientific name.",
          "type": "string",
          "format": "default"
        },
        "vernacular_name": {
          "description": "Species common name (preferably in English).",
          "type": "string",
          "format": "default"
        },
        "count": {
          "description": "Number of observations of given species.",
          "type": "integer"
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "https://frictionlessdata.io/schemas/data-package.json"
    },
    {
      "required": [
        "multimedia_access",
        "project",
        "spatial",
        "temporal",
        "taxonomic"
      ],
      "properties": {
        "multimedia_access": {
          "description": "Information about how to access multimedia files from the `observations.csv` table.",
          "type": "object",
          "required": [
            "remote",
            "public"
          ],
          "properties": {
            "remote": {
              "description": "Indicates if multimedia files are stored remotely (e.g. in a cloud) or are part of this data package. In the second case, in the `observations.csv` table, paths relative to the location of `datapackage.json` file are provided.",
              "type": "boolean"
            },
            "public": {
              "description": "Indicates if urls to multimedia files from the `observations.csv` table are publicly accessible. If not, then additional information about a required authentication process should be provided in the `auth_type` field.",
              "type": "boolean"
            },
            "auth_type": {
              "description": "Type of authentication required to get access to multimedia files.",
              "type": "string",
              "format": "default",
              "enum": [
                "basic",
                "token",
                "ldap"
              ]
            }
          }
        },
        "organizations": {
          "description": "List of organizations related to this data package.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/organization"
          }
        },
        "project": {
          "description": "",
          "type": "object",
          "required": [
            "title",
            "sampling_design",
            "sensor_method",
            "animal_types",
            "bait_use",
            "event_interval"
          ],
          "properties": {
            "title": {
              "description": "Title of this project.",
              "type": "string",
              "format": "default"
            },
            "acronym": {
              "description": "Short and human-readable identifier of this project.",
              "type": "string",
              "format": "default"
            },
            "sampling_design": {
              "description": "Type of a sampling layout.",
              "type": "string",
              "format": "array",
              "enum": [
                "Simple random",
                "Systematic random",
                "Clustered (random arrays)",
                "Experimental",
                "Targeted",
                "Ad-hoc (opportunistic)"
              ]
            },
            "sensor_method": {
              "description": "Method of triggering a camera.",
              "type": "string",
              "format": "array",
              "enum": [
                "Motion detection",
                "Timelapse",
                "Both"
              ]
            },
            "animal_types": {
              "description": "Type of animal species in this study. 'Marked' animals are individually-recognizable.",
              "type": "string",
              "format": "array",
              "enum": [
                "Unmarked",
                "Marked",
                "Both"
              ]
            },
            "bait_use": {
              "type": "string",
              "format": "default",
              "description": "Type of bait (if any) that was used with cameras.",
              "enum": [
                "None",
                "Scent",
                "Food",
                "Visual",
                "Acoustic",
                "Other"
              ]
            },
            "event_interval": {
              "description": "Maximum number of seconds between timestamps of successive multimedia files to be considered part of a single independent event/occasion and be assigned the same `event_id`.",
              "type": "integer"
            },
            "methods": {
              "description": "Description of the methodology used to collect and process data.",
              "type": "string",
              "format": "default"
            },
            "references": {
              "description": "List of references related to this project.",
              "type": "array",
              "items": {
                "url": {
                  "description": "Url to a reference.",
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "_id": {
              "description": "Internal attribute of data management system or data packages catalogue: ID of this project.",
              "type": "integer"
            }
          }
        },
        "spatial": {
          "description": "Spatial coverage for this data package specified as GeoJSON.",
          "$ref": "http://json.schemastore.org/geojson.json"
        },
        "temporal": {
          "description": "Temporal coverage for this data package, based on the included deployments",
          "type": "object",
          "required": [
            "start",
            "end"
          ],
          "properties": {
            "start": {
              "description": "Start date of the first deployment, as an ISO 8601 formatted string `YYYY-MM-DD`.",
              "type": "string",
              "format": "date"
            },
            "end": {
              "description": "Start date of the last deployment, as an ISO 8601 formatted string `YYYY-MM-DD`.",
              "type": "string",
              "format": "date"
            }
          }
        },
        "taxonomic": {
          "description": "Taxonomic coverage for this data package. It is based on a set of unique values from `scientific_name` field in `observations.csv` table.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/species"
          }
        },
        "taxon_id_reference": {
          "description": "Url of the source (reference list) of the `taxon_id`s in taxonomic coverage.",
          "example": "http://www.catalogueoflife.org/annual-checklist/2019/",
          "type": "string",
          "format": "uri"
        },
        "_platform_title": {
          "description": "Internal attribute of data management system or data packages catalogue: platform name.",
          "type": "string",
          "format": "default"
        },
        "_platform_url": {
          "description": "Internal attribute of data management system or data packages catalogue: platform url.",
          "type": "string",
          "format": "uri"
        },
        "_platform_version": {
          "description": "Internal attribute of data management system or data packages catalogue: platform version.",
          "type": "string",
          "format": "default"
        },
        "_platform_package_id": {
          "description": "Internal attribute of data management system or data packages catalogue: package id.",
          "type": "integer"
        }
      }
    }
  ]
}
